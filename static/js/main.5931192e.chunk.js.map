{"version":3,"sources":["components/SimpleInput.js","App.js","index.js"],"names":["SimpleInput","props","useState","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredLastName","setEnteredLastName","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredLastNameIsValid","lastNameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputClasses","lastNameInputClasses","emailInputClasses","onSubmit","event","preventDefault","console","log","className","htmlFor","type","id","onChange","target","value","onBlur","disabled","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"gNAwIeA,EAtIK,SAACC,GACnB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoDF,oBAAS,GAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KAEA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4DN,oBAAS,GAArE,mBAAOO,EAAP,KAA+BC,EAA/B,KAEA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAsDV,oBAAS,GAA/D,mBAAOW,EAAP,KAA4BC,EAA5B,KAEMC,EAA4C,KAAvBZ,EAAYa,OACjCC,GAAsBF,GAAsBV,EAE5Ca,EAAoD,KAA3BX,EAAgBS,OACzCG,GAA0BD,GAA0BT,EAEpDW,EAAsBT,EAAaU,SAAS,KAC5CC,GAAyBF,GAAuBP,EAElDU,GAAc,EAEdR,GAAsBK,GAAuBF,IAC/CK,GAAc,GAIhB,IA8CMC,EAAmBP,EACrB,uBACA,eAEIQ,EAAuBN,EAC3B,uBACA,eAEEO,EAAoBJ,EACtB,uBACA,eAEJ,OACE,uBAAMK,SApCsB,SAACC,GAC7BA,EAAMC,iBAENvB,GAAsB,GACtBI,GAA0B,IAErBK,GAAuBG,KAI5BY,QAAQC,IAAI5B,EAAaI,GAGzBH,EAAe,IACfE,GAAsB,GAEtBE,EAAmB,IACnBE,GAA0B,GAE1BE,EAAgB,IAChBE,GAAuB,KAgBvB,UACE,sBAAKkB,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,OAAf,uBACA,uBACEC,KAAK,OACLC,GAAG,OACHC,SAjEuB,SAACR,GAC9BxB,EAAewB,EAAMS,OAAOC,QAiEtBC,OAtDqB,SAACX,GAC5BtB,GAAsB,IAsDhBgC,MAAOnC,IAERc,GACC,mBAAGe,UAAU,aAAb,wCAIJ,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,4BACA,uBACEC,KAAK,OACLC,GAAG,OACHC,SA3E2B,SAACR,GAClCpB,EAAmBoB,EAAMS,OAAOC,QA2E1BC,OAjEyB,SAACX,GAChClB,GAA0B,IAiEpB4B,MAAO/B,IAERY,GACC,mBAAGa,UAAU,aAAb,6CAIJ,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,QAAf,yBACA,uBACEC,KAAK,QACLC,GAAG,QACHC,SArFwB,SAACR,GAC/BhB,EAAgBgB,EAAMS,OAAOC,QAqFvBC,OA3EsB,SAACX,GAC7Bd,GAAuB,IA2EjBwB,MAAO3B,IAERW,GACC,mBAAGU,UAAU,aAAb,4CAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQQ,UAAWjB,EAAnB,0BCxHOkB,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCAOU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.5931192e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const [enteredLastName, setEnteredLastName] = useState('');\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const enteredLastNameIsValid = enteredLastName.trim() !== '';\n  const lastNameInputIsInvalid = !enteredLastNameIsValid && enteredLastNameTouched;\n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid && enteredLastNameIsValid) {\n    formIsValid = true;\n  }\n\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const lastNameInputChangeHandler = (event) => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n  const lastNameInputBlurHandler = (event) => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredLastNameTouched(true);\n\n    if (!enteredNameIsValid && !enteredLastNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredLastName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredName('');\n    setEnteredNameTouched(false);\n\n    setEnteredLastName('');\n    setEnteredLastNameTouched(false);\n\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n    const lastNameInputClasses = lastNameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = enteredEmailIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n      </div>\n\n      <div className={lastNameInputClasses}>\n        <label htmlFor='name'>Your Last Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={lastNameInputChangeHandler}\n          onBlur={lastNameInputBlurHandler}\n          value={enteredLastName}\n        />\n        {lastNameInputIsInvalid && (\n          <p className='error-text'>Last Name must not be empty.</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your E-Mail</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsInvalid && (\n          <p className='error-text'>Please enter a valid email.</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;","import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}